{"version":3,"sources":["redux/actions/makeAction.js","redux/actions/actionTypes.js","application/step.png","redux/selectors/dashboard.js","application/ConversionForm.jsx","application/border.png","application/TypeChooser.jsx","application/background-4.png","application/Content.jsx","redux/selectors/page.js","application/ErrorModal.jsx","application/ApiDocs.jsx","application/source_codes.js","application/ApiDocsModal.jsx","application/PolicyModal.jsx","application/App.jsx","serviceWorker.js","redux/reducers/dashboardReducer.js","redux/reducers/pageReducer.js","services/requests.js","redux/sagas/dashboardSaga.js","redux/sagas/index.js","redux/reducers/index.js","index.js"],"names":["makeAction","type","payload","FETCH_ZOO_MODELS","FETCH_ZOO_MODELS_SUCCESS","FETCH_ZOO_MODELS_FAILED","SET_OPENVINO_VERSION","SET_MODEL_SOURCE","CONVERT_MODEL","CONVERT_MODEL_SUCCESS","CONVERT_MODEL_FAILED","CHANGE_MODAL","dashboardBranch","state","dashboard","openVinoVersionSelector","createSelector","openVinoVersion","availableZooModelsSelector","availableZooModels","conversionInProgressSelector","conversionInProgress","conversionErrorSelector","conversionError","modelSourceSelector","modelSource","submitDisabledSelector","myriad_compile_step","model_optimizer_step","model_downloader_step","mapDispatchToProps","convertModel","changeModal","connect","inProgress","_ref","prevStep","_React$useState","React","useState","_React$useState2","_slicedToArray","advanced","setAdvanced","_React$useState3","_React$useState4","shaves","setShaves","steps","source","resolveSteps","_jsx","onSubmit","e","preventDefault","Object","fromEntries","FormData","target","children","_jsxs","className","concat","_Fragment","htmlFor","id","name","required","accept","map","model","value","Button","variant","size","onClick","policy","open","step","index","src","stepImg","alt","title","subtitle","disabled","Spinner","as","animation","role","_","includes","defaultValue","min","max","onChange","href","openVinoVersions","label","modelSources","setOpenVino","setModelSource","submitDisabled","nextStep","version","default","borderImg","Content","divStyle","backgroundImage","background","backgroundSize","backgroundRepeat","setIndex","style","Carousel","activeIndex","onSelect","console","log","controls","indicators","keyboard","touch","wrap","pause","interval","fade","Item","TypeChooser","ConversionForm","memo","modalSelector","page","modal","ErrorModal","error","close","error_modal","Modal","show","onHide","Header","closeButton","Title","Body","message","stdout","stderr","Footer","docs","FontAwesomeIcon","icon","faBook","openvino","window","location","origin","caffe","tf","zoo","ApiDocsModal","PolicyModal","App","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","formAdvanced","_createClass","key","ApiDocs","Component","fetchZooModels","Boolean","hostname","match","DEFAULT_STATE","dashboardReducer","arguments","length","undefined","action","actionTypes","_objectSpread","available","pageReducer","GET","POST","service","requestType","url","data","config","xsrfCookieName","xsrfHeaderName","headers","Accept","request","get","post","put","delete","TypeError","fetchModels","_marked2","_regeneratorRuntime","mark","dashboardSaga","generateYaml","filenames","precision","task_type","framework","_ref$optimizer_params","optimizer_params","optimizerStr","split","filter","item","trim","join","filename","file_string","readAsJson","blob","Promise","resolve","reject","reader","FileReader","onload","JSON","parse","result","onerror","readAsText","response","_context","prev","next","select","sent","abrupt","params","t0","stop","_marked","_ref2","_callee","optimizer_additional","yml","_data","_context2","append","values","Blob","forEach","responseType","downloadFile","t1","has","_context3","all","takeLatest","t2","t3","history","createBrowserHistory","sagaMiddleWare","createSagaMiddleware","store","createStore","combineReducers","router","connectRouter","composeWithDevTools","applyMiddleware","routerMiddleware","run","rootSaga","ReactDOM","render","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1344534f.chunk.js","sourcesContent":["export const makeAction = (type) => {\r\n    return (payload) => ({\r\n        type,\r\n        payload,\r\n    });\r\n};","export const FETCH_ZOO_MODELS = \"FETCH_ZOO_MODELS\"\r\nexport const FETCH_ZOO_MODELS_SUCCESS = \"FETCH_ZOO_MODELS_SUCCESS\"\r\nexport const FETCH_ZOO_MODELS_FAILED = \"FETCH_ZOO_MODELS_FAILED\"\r\nexport const SET_OPENVINO_VERSION = \"SET_OPENVINO_VERSION\"\r\nexport const SET_MODEL_SOURCE = \"SET_MODEL_SOURCE\"\r\nexport const CONVERT_MODEL = \"CONVERT_MODEL\"\r\nexport const CONVERT_MODEL_SUCCESS = \"CONVERT_MODEL_SUCCESS\"\r\nexport const CONVERT_MODEL_FAILED = \"CONVERT_MODEL_FAILED\"\r\nexport const CHANGE_MODAL = \"CHANGE_MODAL\"","export default __webpack_public_path__ + \"static/media/step.1341f905.png\";","import {createSelector} from 'reselect';\r\n\r\nexport const dashboardBranch = state => state.dashboard;\r\n\r\nexport const openVinoVersionSelector = createSelector(\r\n  dashboardBranch,\r\n  dashboard => dashboard.openVinoVersion\r\n)\r\n\r\nexport const availableZooModelsSelector = createSelector(\r\n  dashboardBranch,\r\n  dashboard => dashboard.availableZooModels\r\n)\r\n\r\nexport const conversionInProgressSelector = createSelector(\r\n  dashboardBranch,\r\n  dashboard => dashboard.conversionInProgress\r\n)\r\n\r\nexport const conversionErrorSelector = createSelector(\r\n  dashboardBranch,\r\n  dashboard => dashboard.conversionError || {}\r\n)\r\n\r\nexport const modelSourceSelector = createSelector(\r\n  dashboardBranch,\r\n  dashboard => dashboard.modelSource\r\n)\r\n\r\nexport const submitDisabledSelector = createSelector(\r\n  openVinoVersionSelector,\r\n  modelSourceSelector,\r\n  (openVinoVersion, modelSource) => !openVinoVersion || !modelSource\r\n)\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport stepImg from './step.png';\r\nimport {Button, Spinner} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport _ from 'lodash';\r\nimport {\r\n  availableZooModelsSelector,\r\n  conversionInProgressSelector,\r\n  modelSourceSelector\r\n} from \"../redux/selectors/dashboard\";\r\nimport {makeAction} from \"../redux/actions/makeAction\";\r\nimport {CHANGE_MODAL, CONVERT_MODEL} from \"../redux/actions/actionTypes\";\r\n\r\nconst myriad_compile_step = {\r\n  \"title\": \"MyriadX Compile\",\r\n  \"subtitle\": \"Model will be compiled using myriad_compile tool\",\r\n  \"cli_params\": \"-ip U8\"\r\n}\r\nconst model_optimizer_step = {\r\n  \"title\": \"Model Optimizer\",\r\n  \"subtitle\": \"Model will be optimized and converted to OpenVINO format\",\r\n  \"cli_params\": \"--data_type=FP16 --mean_values=[127.5,127.5,127.5] --scale_values=[255,255,255]\"\r\n}\r\nconst model_downloader_step = {\r\n  \"title\": \"Model Downloader\",\r\n  \"subtitle\": \"Model will be downloaded using OpenVINO model downloader\",\r\n  \"cli_params\": \"--precisions FP16 --num_attempts 5\"\r\n}\r\n\r\nconst resolveSteps = source => {\r\n  switch (source) {\r\n    case \"file\":\r\n    case \"zoo\":\r\n      return [model_downloader_step, model_optimizer_step, myriad_compile_step]\r\n    case \"caffe\":\r\n    case \"tf\":\r\n    case \"onnx\":\r\n      return [model_optimizer_step, myriad_compile_step]\r\n    case \"openvino\":\r\n      return [myriad_compile_step]\r\n    default: {\r\n      return []\r\n    }\r\n  }\r\n}\r\n\r\nconst ConversionForm = ({modelSource, prevStep, availableZooModels, convertModel, inProgress, changeModal}) => {\r\n  const [advanced, setAdvanced] = React.useState(true);\r\n  const [shaves, setShaves] = React.useState(4);\r\n  const steps = resolveSteps(modelSource);\r\n  return (\r\n\r\n    <form onSubmit={e => {\r\n      e.preventDefault();\r\n      convertModel(Object.fromEntries(new FormData(e.target)))\r\n    }}>\r\n      <div className={`params-form ${advanced ? 'expanded' : ''}`}>\r\n        <div className=\"params-form-paths\">\r\n          <div className=\"upper-border\">Conversion parameters</div>\r\n          <div className=\"form\">\r\n            {\r\n              modelSource === \"file\" &&\r\n              <>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"openvino-xml\">Model name</label>\r\n                  <input id=\"config-name\" name=\"config-name\" required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"openvino-xml\">Config file (.yml)</label>\r\n                  <input id=\"config-file\" name=\"config-file\" type=\"file\" accept=\".yml\" required/>\r\n                </div>\r\n              </>\r\n            }\r\n            {/* {\r\n              modelSource === \"pytorch\" &&\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"onnx-model\">Model file (.onnx)</label>\r\n                <input id=\"onnx-model\" name=\"onnx-model\" type=\"file\" accept=\".onnx\" required/>\r\n              </div>\r\n            } */}\r\n            {\r\n              modelSource === \"openvino\" &&\r\n              <>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"openvino-xml\">Definition file (.xml)</label>\r\n                  <input id=\"openvino-xml\" name=\"openvino-xml\" type=\"file\" accept=\".xml\" required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"openvino-bin\">Weights file (.bin)</label>\r\n                  <input id=\"openvino-bin\" name=\"openvino-bin\" type=\"file\" accept=\".bin\" required/>\r\n                </div>\r\n              </>\r\n            }\r\n            {\r\n              modelSource === \"tf\" &&\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"tf-model\">Model file (.pb)</label>\r\n                <input id=\"tf-model\" name=\"tf-model\" type=\"file\" accept=\".pb\" required/>\r\n              </div>\r\n            }\r\n            {\r\n              modelSource === \"onnx\" &&\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"onnx-model\">Model file (.onnx)</label>\r\n                <input id=\"onnx-model\" name=\"onnx-model\" type=\"file\" accept=\".onnx\" required/>\r\n              </div>\r\n            }\r\n                        {\r\n              modelSource === \"caffe\" &&\r\n              <>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"caffe-model\">Model file (.caffemodel)</label>\r\n                  <input id=\"caffe-model\" name=\"caffe-model\" type=\"file\" accept=\".caffemodel\" required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"caffe-proto\">Proto file (.prototxt)</label>\r\n                  <input id=\"caffe-proto\" name=\"caffe-proto\" type=\"file\" accept=\".prototxt\" required/>\r\n                </div>\r\n              </>\r\n            }\r\n            {\r\n              modelSource === \"zoo\" &&\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"zoo-name\">Model name</label>\r\n                <select id=\"zoo-name\" name=\"zoo-name\">\r\n                  {\r\n                    availableZooModels.map(model => (\r\n                      <option key={model} value={model}>{model}</option>\r\n                    ))\r\n                  }\r\n                </select>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"lower-border\">\r\n            By submitting this form, you accept our\r\n            <Button variant=\"link\" size=\"sm\" onClick={() => changeModal({policy: {open: true}})}>Privacy Policy</Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"params-form-steps\">\r\n          <div className=\"upper-border\">Conversion steps</div>\r\n          <div className=\"steps\">\r\n            {\r\n              steps.map((step, index) => (\r\n                <div className=\"step\" key={index}>\r\n                  <img src={stepImg} alt=\"\"/>\r\n                  <span className=\"step-label\">{index + 1}</span>\r\n                  <span className=\"step-descr\">\r\n                    <p className=\"title\">{step.title}</p>\r\n                    <p className=\"subtitle\">{step.subtitle}</p>\r\n                  </span>\r\n                </div>\r\n              ))\r\n            }\r\n          </div>\r\n          <div className=\"lower-border\">\r\n            <Button variant=\"outline-secondary\" onClick={() => {prevStep(); setAdvanced(false)}}>Back</Button>\r\n            <Button variant=\"outline-success\" type=\"submit\" disabled={inProgress}>\r\n              {\r\n                inProgress\r\n                  ? <>\r\n                    <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/>\r\n                    <span>Converting...</span>\r\n                  </>\r\n                  : <span>Convert</span>\r\n              }\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className={`params-form-advanced ${advanced ? 'expanded' : ''}`}>\r\n          <div className=\"upper-border\">Advanced options</div>\r\n          <div className=\"advanced-options\">\r\n            {\r\n              _.includes([\"onnx\", \"tf\", \"caffe\"], modelSource) &&\r\n                <div className=\"advanced-option\">\r\n                  <label htmlFor=\"advanced-option-input-optimizer\"><span>Model optimizer</span> params:</label>\r\n                  <input type=\"text\" id=\"advanced-option-input-optimizer\" name=\"advanced-option-input-optimizer\" defaultValue={model_optimizer_step['cli_params']}/>\r\n                </div>\r\n            }\r\n            <div className=\"advanced-option\">\r\n              <label htmlFor=\"advanced-option-input-compiler\"><span>MyriadX compile</span> params:</label>\r\n              <input type=\"text\" id=\"advanced-option-input-compiler\" name=\"advanced-option-input-compiler\" defaultValue={myriad_compile_step['cli_params']}/>\r\n            </div>\r\n            <div className=\"advanced-option\">\r\n              <label htmlFor=\"advanced-option-input-shaves\"><span>Shaves</span>: {shaves}</label>\r\n              <input type=\"range\" id=\"advanced-option-input-shaves\" name=\"advanced-option-input-shaves\" min={1} max={16} onChange={e => setShaves(e.target.value)} value={shaves}/>\r\n              <div className=\"advanced-option-input-shaves-ticks\">\r\n                <span>1</span>\r\n                <span>16</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"lower-border\">\r\n            You can read more about advanced options <a href=\"https://docs.openvinotoolkit.org/latest/openvino_docs_MO_DG_prepare_model_convert_model_Converting_Model.html\">here</a>\r\n          </div>\r\n          <div className=\"expander\" onClick={() => setAdvanced(!advanced)}>\r\n            Advanced &gt;\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nConversionForm.propTypes = {\r\n  modelSource: PropTypes.string,\r\n  prevStep: PropTypes.func.isRequired,\r\n  convertModel: PropTypes.func.isRequired,\r\n  changeModal: PropTypes.func.isRequired,\r\n  availableZooModels: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  modelSource: modelSourceSelector(state),\r\n  availableZooModels: availableZooModelsSelector(state),\r\n  inProgress: conversionInProgressSelector(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  convertModel: makeAction(CONVERT_MODEL),\r\n  changeModal: makeAction(CHANGE_MODAL),\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ConversionForm);\r\n","export default __webpack_public_path__ + \"static/media/border.aea777e1.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {SET_MODEL_SOURCE, SET_OPENVINO_VERSION} from \"../redux/actions/actionTypes\";\r\nimport {makeAction} from \"../redux/actions/makeAction\";\r\nimport {modelSourceSelector, openVinoVersionSelector, submitDisabledSelector} from \"../redux/selectors/dashboard\";\r\nimport borderImg from './border.png'\r\n\r\nconst openVinoVersions = [\r\n  {label: \"2021.2\", value: \"2021.2\"},\r\n  {label: \"2021.3\", value: \"2021.3\"},\r\n  {label: \"2021.4\", value: \"2021.4\"},\r\n  {label: \"2022.1\", value: \"2022.1\", \"default\": true},\r\n]\r\n\r\nconst modelSources = [\r\n  {label: \"Pytorch Model\", value: \"pytorch\"},\r\n  {label: \"TensorFlow Model\", value: \"tf\"},\r\n  {label: \"ONNX Model\", value: \"onnx\"},\r\n  {label: \"OpenVino Model\", value: \"openvino\"},\r\n  {label: \"Caffe Model\", value: \"caffe\"},\r\n  {label: \"OpenVino Zoo Model\", value: \"zoo\"},\r\n]\r\n\r\nconst TypeChooser = ({modelSource, openVinoVersion, submitDisabled, nextStep, setOpenVino, setModelSource}) => (\r\n  <div className=\"type-chooser\">\r\n    <div className=\"cta\">\r\n      <h2>Choose OpenVINO tools version:</h2>\r\n    </div>\r\n    <div className=\"version-choices\">\r\n      {\r\n        openVinoVersions.map(version => (\r\n          <Button key={version.value} className={`${openVinoVersion === version.value ? \"active\" : ''} ${version.default ? 'default' : ''}`} variant=\"dark\" size=\"lg\" onClick={() => setOpenVino(version.value)}>\r\n            {version.label}\r\n            {\r\n              version.default && <span className=\"default-label\">\r\n                <img src={borderImg} alt=\"\"/>\r\n                <p>DepthAI Default</p>\r\n              </span>\r\n            }\r\n          </Button>\r\n        ))\r\n      }\r\n    </div>\r\n    <div className=\"cta\">\r\n      <h2>Choose model source:</h2>\r\n    </div>\r\n    <div className=\"model-choices\">\r\n      {\r\n        modelSources.map(source => (\r\n          <Button key={source.value} className={modelSource === source.value ? \"active\" : ''} variant=\"dark\" size=\"lg\" onClick={() => setModelSource(source.value)}>{source.label}</Button>\r\n        ))\r\n      }\r\n    </div>\r\n    <Button variant=\"outline-success\" disabled={submitDisabled} onClick={() => nextStep()}>Continue</Button>\r\n  </div>\r\n);\r\n\r\nTypeChooser.propTypes = {\r\n  nextStep: PropTypes.func.isRequired,\r\n  setOpenVino: PropTypes.func.isRequired,\r\n  setModelSource: PropTypes.func.isRequired,\r\n  submitDisabled: PropTypes.bool.isRequired,\r\n  openVinoVersion: PropTypes.string,\r\n  modelSource: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  openVinoVersion: openVinoVersionSelector(state),\r\n  modelSource: modelSourceSelector(state),\r\n  submitDisabled: submitDisabledSelector(state),\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  setOpenVino: makeAction(SET_OPENVINO_VERSION),\r\n  setModelSource: makeAction(SET_MODEL_SOURCE),\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TypeChooser);\r\n","export default __webpack_public_path__ + \"static/media/background-4.cfade5f0.png\";","import React from 'react';\r\nimport ConversionForm from \"./ConversionForm\";\r\nimport {Carousel} from \"react-bootstrap\";\r\nimport TypeChooser from \"./TypeChooser\";\r\nimport background from \"./background-4.png\"\r\n\r\nconst Content = () => {\r\n  const divStyle = {\r\n    backgroundImage: {background},\r\n    backgroundSize: 'cover', // 可以根据需要调整背景大小属性\r\n    backgroundRepeat: 'no-repeat', // 控制是否重复显示背景图片\r\n  };\r\n  const [index, setIndex] = React.useState(0);\r\n  return (\r\n    <>\r\n      <div className=\"jumbo\" style={divStyle}>\r\n        <h1>Let's Convert your models now!!!</h1>\r\n        {/* <h3>Online tool to convert TensorFlow / Caffe / OpenVino Zoo model into MyriadX blob</h3> */}\r\n        <h3>ModelConverter | Online tool to Convert model to ncnn model formats</h3>\r\n      </div>\r\n      <Carousel activeIndex={index} onSelect={console.log} controls={false} indicators={false} keyboard={false}\r\n                touch={false} wrap={false} pause={false} interval={null} fade={true}>\r\n        <Carousel.Item>\r\n          <TypeChooser nextStep={() => setIndex(index + 1)}/>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <ConversionForm nextStep={() => {}} prevStep={() => setIndex(index - 1)}/>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n    </>\r\n  );\r\n}\r\n\r\nContent.propTypes = {};\r\n\r\nexport default React.memo(Content);","import {createSelector} from 'reselect';\r\n\r\nexport const pageBranch = state => state.page;\r\n\r\nexport const modalSelector = createSelector(\r\n  pageBranch,\r\n  page => page.modal\r\n);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Button, Modal} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport {CHANGE_MODAL} from \"../redux/actions/actionTypes\";\r\nimport {makeAction} from \"../redux/actions/makeAction\";\r\nimport {modalSelector} from \"../redux/selectors/page\";\r\nimport {conversionErrorSelector} from \"../redux/selectors/dashboard\";\r\n\r\nconst ErrorModal = ({modal, changeModal, error}) => {\r\n  const close = () => changeModal({error_modal: {open: false}});\r\n  return (\r\n    <Modal id=\"error-modal\" size=\"lg\" show={modal && modal.open} onHide={close}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          Conversion error\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div>\r\n          <span>Error message</span>\r\n          <pre>{error.message}</pre>\r\n        </div>\r\n        <div>\r\n          <span>Console output (stdout)</span>\r\n          <pre>{error.stdout}</pre>\r\n        </div>\r\n        <div>\r\n          <span>Error output (stderr)</span>\r\n          <pre>{error.stderr}</pre>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"outline-danger\" href=\"https://github.com/luxonis/blobconverter/issues\">Report a bug</Button>\r\n        <Button onClick={close}>Try again</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nErrorModal.propTypes = {\r\n  changeModal: PropTypes.func.isRequired,\r\n  modal: PropTypes.object,\r\n  error: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  modal: modalSelector(state).error_modal,\r\n  error: conversionErrorSelector(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  changeModal: makeAction(CHANGE_MODAL),\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(React.memo(ErrorModal));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faBook } from '@fortawesome/free-solid-svg-icons'\r\nimport {makeAction} from \"../redux/actions/makeAction\";\r\nimport {CHANGE_MODAL} from \"../redux/actions/actionTypes\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst ApiDocs = ({changeModal}) => (\r\n  <Button variant=\"info\" id=\"api-docs\" onClick={() => changeModal({docs: {open: true}})}>\r\n    <span><FontAwesomeIcon icon={faBook} /></span>\r\n    <span>Use API</span>\r\n  </Button>\r\n);\r\n\r\nApiDocs.propTypes = {\r\n  changeModal: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  changeModal: makeAction(CHANGE_MODAL),\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ApiDocs);\r\n","export const openvino = `import requests\r\n\r\nurl = \"${window.location.origin}/compile\"  # change if running against other URL\r\n\r\npayload = {\r\n    'compiler_params': '-ip U8 -VPU_MYRIAD_PLATFORM VPU_MYRIAD_2480 -VPU_NUMBER_OF_SHAVES 4 -VPU_NUMBER_OF_CMX_SLICES 4',\r\n    'compile_type': 'myriad'\r\n}\r\nfiles = {\r\n    'definition': open('/path/to/definition.xml', 'rb'),\r\n    'weights': open('/path/to/weights.bin', 'rb')\r\n}\r\nparams = {\r\n    'version': '2020.1',  # OpenVINO version, can be \"2021.1\", \"2020.4\", \"2020.3\", \"2020.2\", \"2020.1\", \"2019.R3\"\r\n}\r\n\r\nresponse = requests.post(url, data=payload, files=files, params=params)\r\n`\r\n\r\nexport const caffe = `import requests\r\n\r\nurl = \"${window.location.origin}/compile\"  # change if running against other URL\r\npayload = {\r\n    'compile_type': 'model',\r\n    'model_type': 'caffe',\r\n    'intermediate_compiler_params': '--data_type=FP16 --mean_values [127.5,127.5,127.5] --scale_values [255,255,255]',\r\n    'compiler_params': '-ip U8 -VPU_MYRIAD_PLATFORM VPU_MYRIAD_2480 -VPU_NUMBER_OF_SHAVES 4 -VPU_NUMBER_OF_CMX_SLICES 4'\r\n}\r\nfiles = {\r\n    'model': open('/path/to/mobilenet-ssd.caffemodel', 'rb'),\r\n    'proto': open('/path/to/mobilenet-ssd.prototxt', 'rb')\r\n}\r\nparams = {\r\n    'version': '2020.1',  # OpenVINO version, can be \"2021.1\", \"2020.4\", \"2020.3\", \"2020.2\", \"2020.1\", \"2019.R3\"\r\n}\r\nresponse = requests.post(url, data=payload, files=files, params=params)\r\n`\r\n\r\nexport const tf = `import requests\r\n\r\nurl = \"${window.location.origin}/compile\"  # change if running against other URL\r\npayload = {\r\n    'compile_type': 'model',\r\n    'model_type': 'caffe',\r\n    'intermediate_compiler_params': '--data_type=FP16 --mean_values [127.5,127.5,127.5] --scale_values [255,255,255]',\r\n    'compiler_params': '-ip U8 -VPU_MYRIAD_PLATFORM VPU_MYRIAD_2480 -VPU_NUMBER_OF_SHAVES 4 -VPU_NUMBER_OF_CMX_SLICES 4'\r\n}\r\nfiles = {\r\n    'model': open('/path/to/mobilenet-ssd.pb', 'rb'),\r\n}\r\nparams = {\r\n    'version': '2020.1',  # OpenVINO version, can be \"2021.1\", \"2020.4\", \"2020.3\", \"2020.2\", \"2020.1\", \"2019.R3\"\r\n}\r\nresponse = requests.post(url, data=payload, files=files, params=params)\r\n`\r\n\r\nexport const zoo = `import requests\r\n\r\nurl = \"${window.location.origin}/compile\"  # change if running against other URL\r\npayload = {\r\n    'compile_type': 'zoo',\r\n    'model_name': 'mobilenet-ssd',\r\n    'model_downloader_params': '--precisions FP16 --num_attempts 5',\r\n    'intermediate_compiler_params': '--data_type=FP16 --mean_values [127.5,127.5,127.5] --scale_values [255,255,255]',\r\n    'compiler_params': '-ip U8 -VPU_MYRIAD_PLATFORM VPU_MYRIAD_2480 -VPU_NUMBER_OF_SHAVES 4 -VPU_NUMBER_OF_CMX_SLICES 4'\r\n}\r\nparams = {\r\n    'version': '2020.1',  # OpenVINO version, can be \"2021.1\", \"2020.4\", \"2020.3\", \"2020.2\", \"2020.1\", \"2019.R3\"\r\n}\r\nresponse = requests.post(url, data=payload, params=params)\r\n`","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Modal} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport {modalSelector} from \"../redux/selectors/page\";\r\nimport {CHANGE_MODAL} from \"../redux/actions/actionTypes\";\r\nimport {makeAction} from \"../redux/actions/makeAction\";\r\nimport {caffe, openvino, tf, zoo} from \"./source_codes\";\r\n\r\nconst ApiDocsModal = ({modal, changeModal}) => (\r\n  <Modal size=\"xl\" id=\"docs-modal\" show={modal && modal.open} onHide={() => changeModal({docs: {open: false}})}>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>\r\n        API integration guide\r\n      </Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <div className=\"code-section\">\r\n        <h3>Convert OpenVINO model</h3>\r\n        <pre><code>{openvino}</code></pre>\r\n      </div>\r\n      <div className=\"code-section\">\r\n        <h3>Convert Caffe model</h3>\r\n        <pre><code>{caffe}</code></pre>\r\n      </div>\r\n      <div className=\"code-section\">\r\n        <h3>Convert TensorFlow model</h3>\r\n        <pre><code>{tf}</code></pre>\r\n      </div>\r\n      <div className=\"code-section\">\r\n        <h3>Download model from model zoo</h3>\r\n        <pre><code>{zoo}</code></pre>\r\n      </div>\r\n    </Modal.Body>\r\n    <Modal.Footer/>\r\n  </Modal>\r\n);\r\n\r\nApiDocsModal.propTypes = {\r\n  changeModal: PropTypes.func.isRequired,\r\n  modal: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  modal: modalSelector(state).docs,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  changeModal: makeAction(CHANGE_MODAL),\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(React.memo(ApiDocsModal));\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Modal} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport {makeAction} from \"../redux/actions/makeAction\";\r\nimport {CHANGE_MODAL} from \"../redux/actions/actionTypes\";\r\n\r\nconst PolicyModal = ({modal, changeModal}) => (\r\n  <Modal size=\"xl\" id=\"policy-modal\" show={modal && modal.open} onHide={() => changeModal({policy: {open: false}})}>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title/>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <h1>Privacy Policy for Luxonis</h1>\r\n\r\n      <p>At BlobConverter, accessible from http://blobconverter.luxonis.com/, one of our main priorities is the privacy of our\r\n        visitors. This Privacy Policy document contains types of information that is collected and recorded by\r\n        BlobConverter and how we use it.</p>\r\n\r\n      <p>If you have additional questions or require more information about our Privacy Policy, do not hesitate to\r\n        contact us.</p>\r\n\r\n      <p>This Privacy Policy applies only to our online activities and is valid for visitors to our website with regards\r\n        to the information that they shared and/or collect in BlobConverter. This policy is not applicable to any\r\n        information collected offline or via channels other than this website. </p>\r\n\r\n      <h2>Consent</h2>\r\n\r\n      <p>By using our website, you hereby consent to our Privacy Policy and agree to its terms. </p>\r\n\r\n      <h2>Information we collect</h2>\r\n\r\n      <p>The data you are asked to provide, and the reasons why you are asked to provide it, will\r\n        be made clear to you at the point we ask you to provide your personal information.</p>\r\n      <p>If you contact us directly, we may receive additional information about you such as your name, email address,\r\n        phone number, the contents of the message and/or attachments you may send us, and any other information you may\r\n        choose to provide.</p>\r\n\r\n      <h2>How we use your information</h2>\r\n\r\n      <p>We use the information we collect to provide services by your request</p>\r\n    </Modal.Body>\r\n    <Modal.Footer/>\r\n  </Modal>\r\n);\r\n\r\nPolicyModal.propTypes = {\r\n  changeModal: PropTypes.func.isRequired,\r\n  modal: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  modal: state.page.modal.policy,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  changeModal: makeAction(CHANGE_MODAL),\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(React.memo(PolicyModal));\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport {makeAction} from \"../redux/actions/makeAction\";\r\nimport {FETCH_ZOO_MODELS} from \"../redux/actions/actionTypes\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n// import Particles from \"react-particles-js\";\r\nimport Content from \"./Content\";\r\nimport ErrorModal from \"./ErrorModal\";\r\nimport ApiDocs from \"./ApiDocs\";\r\nimport ApiDocsModal from \"./ApiDocsModal\";\r\nimport PolicyModal from \"./PolicyModal\";\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formAdvanced: false,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app-container\">\r\n        <div className=\"App\">\r\n          <div className=\"content\">\r\n            <Content/>\r\n            <ErrorModal/>\r\n            <ApiDocsModal/>\r\n            <PolicyModal/>\r\n            <ApiDocs/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  fetchZooModels: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchZooModels: makeAction(FETCH_ZOO_MODELS)\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n\r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n\r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n\r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n\r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n\r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n\r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n\r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst DEFAULT_STATE = {\r\n  modelSource: null,\r\n  openVinoVersion: \"2022.1\",\r\n  availableZooModels: [],\r\n  conversionInProgress: false,\r\n  conversionError: null,\r\n};\r\n\r\nconst dashboardReducer = (state = DEFAULT_STATE, action) => {\r\n  switch (action.type) {\r\n    case '@@router/LOCATION_CHANGE': {\r\n      return DEFAULT_STATE;\r\n    }\r\n    case actionTypes.FETCH_ZOO_MODELS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        availableZooModels: action.payload.available,\r\n      }\r\n    }\r\n    case actionTypes.SET_MODEL_SOURCE: {\r\n      return {\r\n        ...state,\r\n        availableZooModels: [],\r\n        modelSource: action.payload,\r\n      }\r\n    }\r\n    case actionTypes.SET_OPENVINO_VERSION: {\r\n      return {\r\n        ...state,\r\n        availableZooModels: [],\r\n        openVinoVersion: action.payload,\r\n      }\r\n    }\r\n    case actionTypes.CONVERT_MODEL: {\r\n      return {\r\n        ...state,\r\n        conversionError: null,\r\n        conversionInProgress: true,\r\n      }\r\n    }\r\n    case actionTypes.CONVERT_MODEL_FAILED: {\r\n      return {\r\n        ...state,\r\n        conversionError: action.error,\r\n        conversionInProgress: false,\r\n      }\r\n    }\r\n    case actionTypes.CONVERT_MODEL_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        conversionInProgress: false\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default dashboardReducer;\r\n","// import * as actionTypes from '../actions/actionTypes';\r\nimport {CHANGE_MODAL} from \"../actions/actionTypes\";\r\n\r\nconst DEFAULT_STATE = {\r\n  modal: {},\r\n};\r\n\r\nconst pageReducer = (state = DEFAULT_STATE, action) => {\r\n  switch (action.type) {\r\n    case '@@router/LOCATION_CHANGE': {\r\n      return DEFAULT_STATE;\r\n    }\r\n    case CHANGE_MODAL: {\r\n      return {\r\n        ...state,\r\n        modal: {\r\n          ...state.modal,\r\n          ...action.payload,\r\n        }\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default pageReducer;\r\n","import request from 'axios';\r\n\r\nexport const GET = 'GET';\r\nexport const POST = 'POST';\r\nexport const PUT = 'PUT';\r\nexport const DELETE = 'DELETE';\r\n\r\nconst service = (requestType, url, data = {}, config = {}) => {\r\n    config = {\r\n        xsrfCookieName: 'csrftoken',\r\n        xsrfHeaderName: 'X-CSRFTOKEN',\r\n        ...config,\r\n        headers: {\r\n            Accept: 'application/json',\r\n            ...config.headers,\r\n        },\r\n    };\r\n\r\n    switch (requestType) {\r\n        case GET: {\r\n            return request.get(url, config);\r\n        }\r\n        case POST: {\r\n            return request.post(url, data, config);\r\n        }\r\n        case PUT: {\r\n            return request.put(url, data, config);\r\n        }\r\n        case DELETE: {\r\n            return request.delete(url, config);\r\n        }\r\n        default: {\r\n            throw new TypeError('No valid request type provided');\r\n        }\r\n    }\r\n};\r\n\r\nexport default service;","/* eslint-disable default-case */\r\nimport {all, takeLatest, put, select} from 'redux-saga/effects';\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport request, {GET, POST} from '../../services/requests';\r\nimport {modelSourceSelector, openVinoVersionSelector} from \"../selectors/dashboard\";\r\nimport downloadFile from 'js-file-download';\r\nimport _ from 'lodash';\r\n\r\nfunction generateYaml({filenames, precision, task_type, framework, optimizer_params=null}) {\r\n  let optimizerStr = \"\";\r\n  if(optimizer_params) {\r\n    optimizerStr = `model_optimizer_args:\r\n${optimizer_params.split(' ').filter(item => !!item.trim()).map(item => \"  - \" + item).join(\"\\n\")}\r\n`\r\n  }\r\n  const file_string = filename => `\r\n  - name: ${precision}/${filename}\r\n    source:\r\n      $type: http\r\n      url: $REQUEST/${filename}`\r\n  const config = `\r\ntask_type: ${task_type}\r\nfiles: ${filenames.map(filename => file_string(filename)).join('')}\r\nframework: ${framework}\r\n${optimizerStr ? optimizerStr : \"\"}\r\n`\r\n  return config\r\n}\r\n\r\nfunction readAsJson(blob) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader  = new FileReader();\r\n    reader.onload = () => resolve(JSON.parse(reader.result))\r\n    reader.onerror = reject\r\n    reader.readAsText(blob)\r\n  })\r\n}\r\n\r\nfunction* fetchModels() {\r\n  try {\r\n    const modelSource = yield select(modelSourceSelector);\r\n    if (modelSource !== 'zoo') {\r\n      return;\r\n    }\r\n    const openVinoVersion = yield select(openVinoVersionSelector);\r\n    const response = yield request(GET, 'zoo_models', {}, {params: {version: openVinoVersion}});\r\n    yield put({type: actionTypes.FETCH_ZOO_MODELS_SUCCESS, payload: response.data});\r\n  } catch (error) {\r\n    console.error(error);\r\n    yield put({type: actionTypes.FETCH_ZOO_MODELS_FAILED, error});\r\n  }\r\n}\r\n\r\nfunction* convertModel({payload}) {\r\n  try {\r\n    const modelSource = yield select(modelSourceSelector);\r\n    const openVinoVersion = yield select(openVinoVersionSelector);\r\n    const precision = \"FP16\"\r\n    const data = new FormData();\r\n    if(modelSource === \"zoo\") {\r\n      data.append('name', payload[\"zoo-name\"]);\r\n      data.append('use_zoo', \"true\");\r\n    } else if(modelSource === \"file\") {\r\n      data.append('config', payload[\"config-file\"]);\r\n      data.append('name', payload[\"config-name\"]);\r\n      data.append('use_zoo', \"true\");\r\n    } else {\r\n      let framework = \"\";\r\n      let optimizer_additional = \"\";\r\n\r\n      switch (modelSource) {\r\n        case 'caffe': {\r\n          framework = \"caffe\";\r\n          optimizer_additional = ` --input_model=$dl_dir/${precision}/${payload['caffe-model'].name} --input_proto=$dl_dir/${precision}/${payload['caffe-proto'].name}`\r\n          break;\r\n        }\r\n        case 'openvino': {\r\n          framework = \"dldt\";\r\n          break;\r\n        }\r\n        case 'tf': {\r\n          framework = \"tf\";\r\n          optimizer_additional = ` --input_model=$dl_dir/${precision}/${payload['tf-model'].name}`\r\n          break;\r\n        }\r\n        case 'onnx': {\r\n          framework = \"onnx\";\r\n          optimizer_additional = ` --input_model=$dl_dir/${precision}/${payload['onnx-model'].name}`\r\n          break;\r\n        }\r\n      }\r\n      const filenames = Object.values(payload).map(item => item.name).filter(item => !!item)\r\n      const yml = generateYaml({\r\n        filenames: filenames,\r\n        precision: precision,\r\n        task_type: \"detection\",\r\n        framework: framework,\r\n        optimizer_params: payload[\"advanced-option-input-optimizer\"] + optimizer_additional,\r\n      })\r\n      console.log(\"Generated config: \" + yml)\r\n      const blob = new Blob([yml],{type:\"text/yaml\"});\r\n      data.append('config', blob)\r\n      Object.values(payload).forEach(item => item.name && data.append(item.name, item))\r\n      data.append('name', filenames[0].split('.')[0]);\r\n    }\r\n\r\n    data.append('myriad_shaves', payload[\"advanced-option-input-shaves\"]);\r\n    data.append('myriad_params_advanced', payload[\"advanced-option-input-compiler\"]);\r\n    const response = yield request(\r\n      POST,\r\n      'compile',\r\n      data,\r\n      {\r\n        params: {version: openVinoVersion},\r\n        headers: {'Content-Type': 'multipart/form-data'},\r\n        responseType: 'blob',\r\n      }\r\n    );\r\n    const filename = response.headers[\"content-disposition\"].split(\"filename=\")[1];\r\n    console.log(\"Downloading \" + filename)\r\n    downloadFile(response.data, filename);\r\n    yield put({type: actionTypes.CONVERT_MODEL_SUCCESS, payload: response.data});\r\n  } catch (error) {\r\n    console.error(error);\r\n    if (_.has(error, 'response')) {\r\n      const data = yield readAsJson(error.response.data);\r\n      yield put({type: actionTypes.CONVERT_MODEL_FAILED, error: data});\r\n      yield put({type: actionTypes.CHANGE_MODAL, payload: {error_modal: {open: true}}});\r\n    }\r\n  }\r\n}\r\n\r\nexport default function* dashboardSaga() {\r\n  yield all([\r\n    yield takeLatest([actionTypes.FETCH_ZOO_MODELS, actionTypes.SET_MODEL_SOURCE, actionTypes.SET_OPENVINO_VERSION], fetchModels),\r\n    yield takeLatest(actionTypes.CONVERT_MODEL, convertModel),\r\n  ]);\r\n}\r\n","import {all} from 'redux-saga/effects';\r\nimport dashboardSaga from './dashboardSaga';\r\n\r\n\r\nexport default function* index() {\r\n    yield all([\r\n      dashboardSaga(),\r\n    ]);\r\n}","/* eslint-disable import/no-anonymous-default-export */\r\nimport {combineReducers} from \"redux\";\r\nimport { connectRouter } from 'connected-react-router';\r\nimport dashboard from './dashboardReducer';\r\nimport page from './pageReducer';\r\n\r\nexport default history => combineReducers({\r\n    dashboard,\r\n    page,\r\n    router: connectRouter(history),\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './application/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createBrowserHistory} from \"history\";\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {applyMiddleware, createStore} from \"redux\";\r\nimport rootReducer from './redux/reducers';\r\nimport rootSaga from './redux/sagas';\r\nimport {routerMiddleware} from 'connected-react-router'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Provider } from \"react-redux\";\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nconst history = createBrowserHistory();\r\nconst sagaMiddleWare =createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n    rootReducer(history),\r\n    composeWithDevTools(\r\n        applyMiddleware(\r\n            routerMiddleware(history),\r\n            sagaMiddleWare,\r\n        )\r\n    )\r\n)\r\n\r\nsagaMiddleWare.run(rootSaga);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n// reportWebVitals();\r\nserviceWorker.unregister();"],"sourceRoot":""}